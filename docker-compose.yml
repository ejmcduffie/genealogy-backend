version: '3.8'

services:
  # API Gateway - Entry point for client requests
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_SERVICE_URL=http://auth-service:4001
      - GEDCOM_SERVICE_URL=http://gedcom-service:4002
      - VERIFICATION_SERVICE_URL=http://verification-service:4003
      - PAYMENT_SERVICE_URL=http://payment-service:4004
      - NFT_SERVICE_URL=http://nft-service:4005
      - STORAGE_SERVICE_URL=http://storage-service:4006
      - ZKP_SERVICE_URL=http://zkp-service:4007
    depends_on:
      - auth-service
      - gedcom-service
      - verification-service
      - payment-service
      - nft-service
      - storage-service
      - zkp-service
    networks:
      - ancestry-network

  # Auth Service - User authentication and management
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4001
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=1h
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_EXPIRES_IN=7d
    depends_on:
      - mongodb
      - redis
    networks:
      - ancestry-network

  # GEDCOM Service - GEDCOM file processing
  gedcom-service:
    build:
      context: ./services/gedcom-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4002
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - ancestry-network

  # Verification Service - Document verification logic
  verification-service:
    build:
      context: ./services/verification-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4003
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - ancestry-network

  # Payment Service - Payment processing
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4004:4004"
      - "3001:3001" # External webhook port
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4004
      - EXTERNAL_PORT=3001
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - ETH_RPC_URL=${ETH_RPC_URL}
      - ETH_CHAIN_ID=${ETH_CHAIN_ID}
    depends_on:
      - mongodb
      - redis
    networks:
      - ancestry-network

  # NFT Service - NFT minting and rewards
  nft-service:
    build:
      context: ./services/nft-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4005:4005"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4005
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - ETH_RPC_URL=${ETH_RPC_URL}
      - NFT_CONTRACT_ADDRESS=${NFT_CONTRACT_ADDRESS}
      - ETH_PRIVATE_KEY=${ETH_PRIVATE_KEY}
    depends_on:
      - mongodb
    networks:
      - ancestry-network

  # Storage Service - ArDrive integration
  storage-service:
    build:
      context: ./services/storage-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4006:4006"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4006
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - ARDRIVE_WALLET_FILE=${ARDRIVE_WALLET_FILE}
      - ARDRIVE_WALLET_PASSWORD=${ARDRIVE_WALLET_PASSWORD}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - ancestry-network

  # ZKP Service - Aleo zero-knowledge proofs
  zkp-service:
    build:
      context: ./services/zkp-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4007:4007"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=4007
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - ALEO_PROGRAM_ID=${ALEO_PROGRAM_ID}
    depends_on:
      - mongodb
    networks:
      - ancestry-network

  # Verification Worker - Async verification processing
  verification-worker:
    build:
      context: ./workers/verification-worker
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongodb
      - redis
      - verification-service
    networks:
      - ancestry-network

  # Payment Worker - Payment processing worker
  payment-worker:
    build:
      context: ./workers/payment-worker
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
      - ETH_RPC_URL=${ETH_RPC_URL}
    depends_on:
      - mongodb
      - redis
      - payment-service
    networks:
      - ancestry-network

  # MongoDB database
  mongodb:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ancestry-network

  # Redis for caching and queue management
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ancestry-network

  # Nginx for reverse proxy and load balancing
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/nginx/certificates
      - ./nginx/www:/var/www/html
    depends_on:
      - api-gateway
    networks:
      - ancestry-network

volumes:
  mongodb_data:
  redis_data:

networks:
  ancestry-network:
    driver: bridge

version: '3.8'

services:
  # MongoDB for development
  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: ancestrychain
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init-scripts/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ./mongo-init-scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: ["--bind_ip_all"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass your_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:your_redis_password
    depends_on:
      - redis

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://root:example@mongodb:27017/ancestrychain?authSource=admin
      - REDIS_URL=redis://:your_redis_password@redis:6379/0
      - JWT_SECRET=your_jwt_secret_key
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - PORT=4001
      - MONGODB_URI=mongodb://root:example@mongodb:27017/ancestrychain?authSource=admin
      - REDIS_URL=redis://:your_redis_password@redis:6379/0
      - JWT_SECRET=your_jwt_secret_key
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis

volumes:
  mongodb_data:
  redis_data:
